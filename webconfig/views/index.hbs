<div>
	<div id="logo">
		<img src="images/direwolf-logo.svg" style="height:8em;float:left" alt="Direwolf" />
	<div>
	<h2 style="text-align:right">Configuration Editor</h2>
</div>
	<div class="dw"></div>
	<br/>
	<input style="clear:both" alt="Direwolf" type="button" onclick='updateDirewolf()' value="Update"/>
	<br/>
	<div id="dialog" title="Dialog Title">I'm a dialog</div>
</div>
<script src="/javascripts/helpText.js"></script>
<script>
	var full = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');

	Handlebars.registerHelper('toLowerCase', function(str) {
	  return str.toLowerCase();
	});
	
	Handlebars.registerHelper('toUpperCase', function(str) {
	  return str.toUpperCase();
	});

	Handlebars.registerHelper('ifEquals', function(arg1, arg2, options) {
		return (arg1 == arg2) ? options.fn(this) : options.inverse(this);
	});

	Handlebars.registerHelper('lt', function( a, b ){
		var next =  arguments[arguments.length-1];
		return (a < b) ? next.fn(this) : next.inverse(this);
	});

	var socket = io.connect(full);

	var direwolf = new Direwolf();

	var template = Handlebars.templates['direwolf'];

	socket.on('direwolf', function(data) {
		direwolf.ParseConfig(data.toString());
		var html = template(direwolf);
		$('.dw').replaceWith(html);
	});

/*	socket.on('radios', function(data) {
		console.log(data);
	});
*/
	function updateRadio(data) {
		socket.emit('radio', data);
		location.hash = "#tabs-6";
	}

	function updateDirewolf() {
		$('#tabs-6 pre').text(direwolf.toString());
	}

	function saveDirewolf() {
		socket.emit('direwolf', direwolf.toString());
		$('#tabs-6 pre').text(direwolf.toString());
	}


	function reloadDirewolf(loc){
		var html = template(direwolf);
		$('.dw').replaceWith(html);
		location.hash = "#" + loc;
	}

	$( "#dialog" ).dialog({ autoOpen: false });

	function termhelp(data) {
		console.log(data);
		$( "#dialog" ).dialog("option","title",data);
		$( "#dialog" ).html(helpText[data]);
		$( "#dialog" ).dialog( "open" );
	}

	function appendAdevice() {
		let adevices = direwolf.getAdevices();
		let candidates = ['ADEVICE0','ADEVICE1','ADEVICE2'];
		let devices = [];
		adevices.forEach(function(dev){
			devices.push(dev.name);
		});
		if (adevices.length == 0) {
			let device = new Adevice();
			device.setAdeviceName('ADEVICE0');
			device.addChannel(new Channel(1));
			direwolf.addAdevice(device);
			return true;
		} else {
			for (let i = 0; i < candidates.length; i++) {
				if (!devices.includes(candidates[i])) {
					let x = new Adevice();
					x.setAdeviceName(candidates[i]);
					x.addChannel(new Channel(-1));
					direwolf.addAdevice(x);
					return true;
				}
			}
		}
		alert("Maximum Audio Devices Reached");
	}

</script>

